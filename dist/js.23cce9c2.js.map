{"version":3,"sources":["../src/js/nav-bar.js","../src/js/index.js"],"names":["navBar","document","querySelector","navButton","navItems","isOpen","classList","contains","state","opening","closing","open","closed","addEventListener","evt","add","remove","transitionOnNavButton","target","setAttribute","removeAttribute","console","log"],"mappings":";AAAA,IAAMA,EAASC,SAASC,cAAc,YAChCC,EAAYF,SAASC,cAAc,yBACnCE,EAAWH,SAASC,cAAc,wBAClCG,IAASL,EAAOM,UAAUC,SAAS,QACnCC,EAAQ,CACZC,SAAS,EACTC,SAAS,EACTC,MAAM,EACNC,QAAQ,GASVT,EAAUU,iBAAiB,QAAS,SAASC,IACtB,IAAjBN,EAAMI,SACRJ,EAAMC,SAAU,EAChBD,EAAME,SAAU,EAChBF,EAAMI,QAAS,EACfJ,EAAMG,MAAO,IAEI,IAAfH,EAAMG,OACRH,EAAME,SAAU,EAChBF,EAAMI,QAAS,EACfJ,EAAMC,SAAU,EAChBD,EAAMG,MAAO,GAGXH,EAAMC,SAAWT,EAAOM,UAAUS,IAAI,QACtCP,EAAME,SAAWV,EAAOM,UAAUU,OAAO,UAQ/Cb,EAAUU,iBAAiB,gBAAiB,SAASC,GAC/CG,IAAAA,EAAwBH,EAAII,SAAW,KAEvCV,EAAMC,SAAWQ,IACnBT,EAAMG,MAAO,EACbH,EAAMC,SAAU,EAChBD,EAAME,SAAU,EAChBF,EAAMI,QAAS,EACVO,KAAAA,aAAa,gBAAiB,QACnCf,EAASgB,gBAAgB,gBAGvBZ,EAAME,SAAWO,IACnBT,EAAMI,QAAS,EACfJ,EAAME,SAAU,EAChBF,EAAMC,SAAU,EAChBD,EAAMG,MAAO,EACRQ,KAAAA,aAAa,gBAAiB,SACnCf,EAASe,aAAa,cAAe;;ACxDzC,aAFA,IAAA,EAAA,EAAA,QAAA,iBAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAAE,QAAQC,IAAI","file":"js.23cce9c2.js","sourceRoot":"..\\pre-dist","sourcesContent":["const navBar = document.querySelector('.nav-bar');\r\nconst navButton = document.querySelector('.nav-bar__menu-button');\r\nconst navItems = document.querySelector('.nav-bar__categories');\r\nconst isOpen = navBar.classList.contains('open') ? true : false;\r\nconst state = {\r\n  opening: false,\r\n  closing: false,\r\n  open: false,\r\n  closed: true\r\n}\r\n\r\n\r\n/**\r\n * Only actions menu click if not in transitional state. \r\n * Probably overkill but will help if need to transition \r\n * from display: none.\r\n */\r\nnavButton.addEventListener('click', function(evt) {\r\n  if (state.closed === true) {\r\n    state.opening = true;\r\n    state.closing = false;\r\n    state.closed = false;\r\n    state.open = false;\r\n  }\r\n  if (state.open === true) {\r\n    state.closing = true;\r\n    state.closed = false;\r\n    state.opening = false;\r\n    state.open = false;\r\n  }\r\n\r\n  if (state.opening) { navBar.classList.add('open'); }\r\n  if (state.closing) { navBar.classList.remove('open'); }\r\n});\r\n\r\n\r\n/**\r\n * Reveals / removes menu to screen readers\r\n * once css transtions complete.\r\n */\r\nnavButton.addEventListener('transitionend', function(evt) {\r\n  let transitionOnNavButton = evt.target === this;\r\n\r\n  if (state.opening && transitionOnNavButton) {\r\n    state.open = true;\r\n    state.opening = false;\r\n    state.closing = false;\r\n    state.closed = false;\r\n    this.setAttribute('aria-expanded', 'true');\r\n    navItems.removeAttribute('aria-hidden');\r\n  }\r\n\r\n  if (state.closing && transitionOnNavButton) {\r\n    state.closed = true;\r\n    state.closing = false;\r\n    state.opening = false;\r\n    state.open = false;\r\n    this.setAttribute('aria-expanded', 'false');\r\n    navItems.setAttribute('aria-hidden', 'true')\r\n  }\r\n});","import navBar from './nav-bar.js';\r\n\r\nconsole.log('hellow worldipssoops!');"]}